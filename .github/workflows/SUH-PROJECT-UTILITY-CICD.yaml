# name: ROMROM-FRONT-Firebase-Distribution

# on:
#   push:
#     branches: [ "main", "test" ]
#   workflow_dispatch:

# jobs:
#   build-and-distribute:
#     runs-on: macos-latest  # iOS 빌드는 macOS 필요!

#     steps:
#       # (1) 코드 체크아웃
#       - name: Check out code
#         uses: actions/checkout@v3

#       # (2) Flutter 설치
#       - name: Set up Flutter
#         uses: subosito/flutter-action@v2
#         with:
#           channel: stable

#       # (3) .env 생성
#       - name: Create .env file from secret
#         run: |
#           echo "${{ secrets.ENV }}" > .env

#       # (4) 의존성 설치
#       - name: Flutter Pub Get
#         run: flutter pub get

#       # (5) iOS 빌드 (ipa)
#       #     - 이 단계에서 코드사인 관련 세팅(인증서, 프로비저닝 프로필 등)을 추가 설정해야 합니다.
#       - name: Build iOS IPA
#         run: |
#           # 예: Release 모드로 iOS 빌드 (Flutter 3.7+ 버전에서 'flutter build ipa'가 정식 지원)
#           flutter build ipa --release

#       # (6) Android 빌드 (apk or appbundle)
#       #     - 앱 서명(keystore)이 필요한 경우, Secrets에서 가져와 설정해줘야 함
#       - name: Build Android APK
#         run: |
#           flutter build apk --release

#       # (7) Firebase CLI 설치
#       - name: Install Firebase CLI
#         run: |
#           npm install -g firebase-tools

#       # (8) Firebase 인증 (Secrets에 보관한 토큰 사용)
#       - name: Firebase Auth
#         run: |
#           firebase logout || true
#           firebase login:ci --token "${{ secrets.FIREBASE_TOKEN }}"

#       # (9) Firebase App Distribution - iOS 배포
#       - name: Distribute iOS to Firebase
#         if: always()
#         run: |
#           # build/ios/ipa/Runner.ipa 위치를 Firebase에 업로드
#           # --app 은 Firebase 콘솔에서 iOS 앱 등록 시 발급되는 App ID (ex: 1:1234567890:ios:abcd1234...)
#           # --groups 에는 Firebase App Distribution에서 만든 테스터 그룹 이름
#           BRANCH=${{ github.ref_name }}
#           firebase appdistribution:distribute \
#             build/ios/ipa/Runner.ipa \
#             --app "${{ secrets.FIREBASE_IOS_APP_ID }}" \
#             --groups "testers" \
#             --release-notes "iOS Build for $BRANCH"

#       # (10) Firebase App Distribution - Android 배포
#       - name: Distribute Android to Firebase
#         if: always()
#         run: |
#           # build/app/outputs/flutter-apk/app-release.apk (기본 경로)
#           BRANCH=${{ github.ref_name }}
#           firebase appdistribution:distribute \
#             build/app/outputs/flutter-apk/app-release.apk \
#             --app "${{ secrets.FIREBASE_ANDROID_APP_ID }}" \
#             --groups "testers" \
#             --release-notes "Android Build for $BRANCH"
